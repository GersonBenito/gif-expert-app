{"version":3,"sources":["components/categoria/AddCategoria.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","App.js","index.js"],"names":["AddCategoria","setCategoria","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","placeholder","getGifs","categoria","a","url","encodeURI","fetch","response","json","data","gifs","map","res","id","title","images","downsized_medium","GifGridItem","Meta","Card","hoverable","cover","src","alt","Container","styled","div","GifGrid","loading","state","setState","useEffect","getData","useFetchGifs","color","role","item","GifExpertApp","categorias","setCategorias","cat","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LA+CeA,EA5CM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEpB,EAAsCC,mBAAS,IAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KAmBA,OACI,mCACI,sBAAMC,SAbO,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMd,SACI,sBAAKO,UAAU,WAAf,UACI,uBAAOA,UAAU,YAAjB,uBACA,uBACIC,KAAK,OACLD,UAAU,eACVE,MAAQV,EACRW,SA1BM,SAAC,GAAe,IAAbC,EAAY,EAAZA,OAEzBX,EAAcW,EAAOF,QAyBLG,YAAY,kC,iDCjCvBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGII,MAAOF,GAHX,cAGbG,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sD,kBCoBLO,G,OAjBK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEtBc,EAASC,IAATD,KAER,OACI,cAAC,IAAD,CACAvB,UAAU,sCACNyB,WAAS,EACTC,MACI,cAAC,IAAD,CAAOC,IAAKlB,EAAKmB,IAAKT,IAJ9B,SAOI,cAACI,EAAD,CAAMJ,MAAOA,QCmBnBU,EAAYC,IAAOC,IAAV,8bAuBAC,EArDC,SAAC,GAAmB,IAAjBzB,EAAgB,EAAhBA,UAEf,ECJwB,SAAEA,GAE1B,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNmB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAU,YAEO,uCAAG,4BAAA5B,EAAA,sEAEOF,EAASC,GAFhB,OAENO,EAFM,OAIZqB,EAAS,CACLrB,KAAMA,EACNmB,SAAS,IAND,2CAAH,oDAWbI,KAEF,CAAC9B,IAGI2B,EDrBmBI,CAAa/B,GAA/BO,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,QAEd,OACI,eAACJ,EAAD,WACI,qBAAKU,MAAM,MAAMvC,UAAU,kDAA3B,SACI,oBAAIA,UAAU,YAAd,SAA4BO,MAI5B0B,GACI,qBAAKjC,UAAU,aAAf,SACI,qBAAKA,UAAU,yBAAyBwC,KAAK,SAA7C,SACI,sBAAMxC,UAAU,UAAhB,4BAKhB,qBAAKA,UAAU,YAAf,SAEQc,GAAQA,EAAKE,KAAK,SAACyB,GAAD,OACd,cAAC,EAAD,eAA+BA,GAAbA,EAAKvB,aEJhCwB,EAlBM,WAEjB,MAAsCnD,mBAAS,CAAC,cAAhD,mBAAQoD,EAAR,KAAoBC,EAApB,KAEA,OACI,qCACI,oBAAI5C,UAAU,sBAAd,0BAEA,cAAC,EAAD,CAAeV,aAAcsD,IAErBD,GAAcA,EAAW3B,KAAI,SAAA6B,GAAG,OAC5B,cAAC,EAAD,CAAmBtC,UAAWsC,GAAhBA,UCLvBC,MATf,WAEE,OACE,mCACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2c2d4c71.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategoria = ({ setCategoria }) => {\r\n    \r\n    const [ inputValue, setInputValue ] = useState('');\r\n\r\n    const handleInputChenge = ({ target }) =>{\r\n\r\n        setInputValue(target.value);\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n\r\n            setCategoria( cats => [ inputValue, ...cats ] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit } >\r\n                <div className='col-md-3'>\r\n                    <label className='text-info'>Categoria</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className='form-control'\r\n                        value={ inputValue } \r\n                        onChange={ handleInputChenge }\r\n                        placeholder='Ingrese una categoria'\r\n                    />\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategoria.propTypes = {\r\n    setCategoria: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default AddCategoria\r\n","\r\nexport const getGifs = async ( categoria ) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=vZNEp8dhcwgQo0breI4CW6VmrSjMZoV7`;\r\n    const response = await fetch( url );\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map( res =>{\r\n        return {\r\n            id: res.id,\r\n            title: res.title,\r\n            url: res.images.downsized_medium.url\r\n        }\r\n    } )\r\n    \r\n    return gifs;\r\n}","import React from 'react';\r\nimport { Card, Image } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n\r\n    const { Meta } = Card;\r\n\r\n    return (\r\n        <Card\r\n        className='animate__animated animate__zoomInUp'\r\n            hoverable\r\n            cover={\r\n                <Image src={url} alt={title} />\r\n            }\r\n        >\r\n            <Meta title={title} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ categoria }) => {\r\n\r\n    const { data, loading } = useFetchGifs(categoria);\r\n\r\n    return (\r\n        <Container>\r\n            <div color='red' className=\"titulo mt-3 animate__animated animate__zoomInUp\">\r\n                <h2 className='text-info' >{categoria}</h2>\r\n            </div>\r\n\r\n            {\r\n                loading && (\r\n                    <div className=\"contenedor\">\r\n                        <div className=\"spinner-grow text-info\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            <div className=\"contenido\">\r\n                {\r\n                    data && data.map( (item) =>(\r\n                        <GifGridItem key={item.id} {...item} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    .titulo{\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n    .contenido{\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, 18rem);\r\n        justify-content: center;\r\n        grid-gap: 25px;\r\n    }\r\n\r\n    .contenedor{\r\n        display: flex;\r\n        justify-content: center;\r\n\r\n        .spinner-grow{\r\n            width: 5rem;\r\n            height: 5rem;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( categoria ) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n\r\n        const getData = async() =>{\r\n\r\n            const data = await getGifs( categoria );\r\n\r\n            setState({\r\n                data: data,\r\n                loading: false\r\n            });\r\n            \r\n        }\r\n\r\n        getData();\r\n\r\n    },[categoria])\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport AddCategoria from './categoria/AddCategoria';\r\nimport GifGrid from './GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [ categorias, setCategorias ] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h1 className='text-info ml-3 mt-3' >GifExpertApp</h1>\r\n            \r\n            <AddCategoria  setCategoria={setCategorias} />\r\n                {\r\n                    categorias && categorias.map(cat =>(\r\n                        <GifGrid key={cat} categoria={cat}  />\r\n                    ))\r\n                }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import GifExpertApp from \"./components/GifExpertApp\";\n\nfunction App() {\n\n  return (\n    <>\n      <GifExpertApp />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}